name: Ci

on:
  pull_request:
    branches: [ master, development, ut-dev ]

jobs:
  build:
    name: Build binary
    runs-on: ubuntu-latest
    container:
      image: golangci/golangci-lint:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install swaggo
        run:  go install github.com/swaggo/swag/cmd/swag@latest 

      - name: Build with make
        run: make build

  lint:
    name: Lint go code with golangci
    runs-on: ubuntu-latest
    container:
      image: golangci/golangci-lint:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Make repo safe
        run: git config --global --add safe.directory /__w/SOARCA/SOARCA
      - name: Install swaggo
        run:  go install github.com/swaggo/swag/cmd/swag@latest 
      - name: lint
        run: |
          ls -la
          make lint
        shell: bash

  test:
    name: Run ci-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4' #
      - name: Make repo safe
        run: git config --global --add safe.directory /__w/SOARCA/SOARCA
      - name: Install swaggo
        run:  go install github.com/swaggo/swag/cmd/swag@latest  
        timeout-minutes: 12
      - name: Start docker containers for test
        run: docker compose -f "deployments/docker/testing/httpbin-test/docker-compose.yml" up -d --build
      - name: Run tests
        run: |
          sudo apt update
          sudo apt install openssh-server -y
          sudo useradd sshtest
          echo "sshtest:pdKY77qNxpI5MAizirtjCVOcm0KFKIs" | sudo chpasswd
          sudo service ssh start
          make ci-test
      - name: Check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          config: ./.testcoverage.yml

