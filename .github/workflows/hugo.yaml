# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy documentation to Github Pages

on:
  # Runs on pushes targeting the default branch
  pull_request:
    branches:
      - development
  push: 
    branches:
      - master

# jobs:
#   deploy:
#     env:
#       HUGO_VERSION: 0.123.7
#     runs-on: ubuntu-22.04
#     concurrency:
#       group: ${{ github.workflow }}-${{ github.ref }}
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           submodules: true  # Fetch Hugo themes (true OR recursive)
#           fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

#       - name: Setup Hugo
#         uses: peaceiris/actions-hugo@v2
#         with:
#           hugo-version: ${HUGO_VERSION}
#           # extended: true

#       - name: Build
#         run: hugo --minify

#       - name: Deploy
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./public

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.123.7
    steps:

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Update npm
        run: npm install -g npm@10.5.0
      - name: Install postcss via NPM
        run:  npm install -g postcss-cli
      - name: Install postcss and autoprefixer via NPM
        run: npm install -g postcss
      - name: Install autoprefixer via NPM
        run: npm install -g autoprefixer    
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        working-directory: docs
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

