// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Goal goal
//
// swagger:model Goal
type Goal struct {

	// achieved
	// Read Only: true
	Achieved *bool `json:"achieved,omitempty"`

	// count
	Count int64 `json:"count,omitempty"`

	// operator
	Operator string `json:"operator,omitempty"`

	// target
	Target string `json:"target,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this goal
func (m *Goal) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this goal based on the context it is used
func (m *Goal) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAchieved(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Goal) contextValidateAchieved(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "achieved", "body", m.Achieved); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Goal) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Goal) UnmarshalBinary(b []byte) error {
	var res Goal
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
