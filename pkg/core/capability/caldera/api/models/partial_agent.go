// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PartialAgent partial agent
//
// swagger:model Partial-Agent
type PartialAgent struct {

	// architecture
	Architecture string `json:"architecture,omitempty"`

	// available contacts
	AvailableContacts []string `json:"available_contacts"`

	// contact
	Contact string `json:"contact,omitempty"`

	// created
	// Read Only: true
	Created string `json:"created,omitempty"`

	// deadman enabled
	DeadmanEnabled *bool `json:"deadman_enabled,omitempty"`

	// display name
	// Read Only: true
	DisplayName string `json:"display_name,omitempty"`

	// exe name
	ExeName string `json:"exe_name,omitempty"`

	// executors
	Executors []string `json:"executors"`

	// group
	Group string `json:"group,omitempty"`

	// host
	Host string `json:"host,omitempty"`

	// host ip addrs
	HostIPAddrs []string `json:"host_ip_addrs"`

	// last seen
	// Read Only: true
	LastSeen string `json:"last_seen,omitempty"`

	// links
	// Read Only: true
	Links []*Link `json:"links"`

	// location
	Location string `json:"location,omitempty"`

	// origin link id
	OriginLinkID string `json:"origin_link_id,omitempty"`

	// paw
	Paw *string `json:"paw,omitempty"`

	// pending contact
	PendingContact string `json:"pending_contact,omitempty"`

	// pid
	Pid int64 `json:"pid,omitempty"`

	// platform
	Platform string `json:"platform,omitempty"`

	// ppid
	Ppid int64 `json:"ppid,omitempty"`

	// privilege
	Privilege string `json:"privilege,omitempty"`

	// proxy chain
	ProxyChain [][]string `json:"proxy_chain"`

	// proxy receivers
	ProxyReceivers map[string][]string `json:"proxy_receivers,omitempty"`

	// server
	Server string `json:"server,omitempty"`

	// sleep max
	SleepMax int64 `json:"sleep_max,omitempty"`

	// sleep min
	SleepMin int64 `json:"sleep_min,omitempty"`

	// trusted
	Trusted bool `json:"trusted,omitempty"`

	// upstream dest
	UpstreamDest *string `json:"upstream_dest,omitempty"`

	// username
	Username string `json:"username,omitempty"`

	// watchdog
	Watchdog int64 `json:"watchdog,omitempty"`
}

// Validate validates this partial agent
func (m *PartialAgent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PartialAgent) validateLinks(formats strfmt.Registry) error {
	if swag.IsZero(m.Links) { // not required
		return nil
	}

	for i := 0; i < len(m.Links); i++ {
		if swag.IsZero(m.Links[i]) { // not required
			continue
		}

		if m.Links[i] != nil {
			if err := m.Links[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("links" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("links" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this partial agent based on the context it is used
func (m *PartialAgent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCreated(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateDisplayName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateLastSeen(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateLinks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PartialAgent) contextValidateCreated(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "created", "body", string(m.Created)); err != nil {
		return err
	}

	return nil
}

func (m *PartialAgent) contextValidateDisplayName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "display_name", "body", string(m.DisplayName)); err != nil {
		return err
	}

	return nil
}

func (m *PartialAgent) contextValidateLastSeen(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "last_seen", "body", string(m.LastSeen)); err != nil {
		return err
	}

	return nil
}

func (m *PartialAgent) contextValidateLinks(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "links", "body", []*Link(m.Links)); err != nil {
		return err
	}

	for i := 0; i < len(m.Links); i++ {

		if m.Links[i] != nil {

			if swag.IsZero(m.Links[i]) { // not required
				return nil
			}

			if err := m.Links[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("links" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("links" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PartialAgent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PartialAgent) UnmarshalBinary(b []byte) error {
	var res PartialAgent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
