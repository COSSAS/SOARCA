// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HeadAPIV2ConfigNameReader is a Reader for the HeadAPIV2ConfigName structure.
type HeadAPIV2ConfigNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HeadAPIV2ConfigNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHeadAPIV2ConfigNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[HEAD /api/v2/config/{name}] HeadAPIV2ConfigName", response, response.Code())
	}
}

// NewHeadAPIV2ConfigNameOK creates a HeadAPIV2ConfigNameOK with default headers values
func NewHeadAPIV2ConfigNameOK() *HeadAPIV2ConfigNameOK {
	return &HeadAPIV2ConfigNameOK{}
}

/*
HeadAPIV2ConfigNameOK describes a response with status code 200, with default header values.

OK
*/
type HeadAPIV2ConfigNameOK struct {
}

// IsSuccess returns true when this head Api v2 config name o k response has a 2xx status code
func (o *HeadAPIV2ConfigNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this head Api v2 config name o k response has a 3xx status code
func (o *HeadAPIV2ConfigNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this head Api v2 config name o k response has a 4xx status code
func (o *HeadAPIV2ConfigNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this head Api v2 config name o k response has a 5xx status code
func (o *HeadAPIV2ConfigNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this head Api v2 config name o k response a status code equal to that given
func (o *HeadAPIV2ConfigNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the head Api v2 config name o k response
func (o *HeadAPIV2ConfigNameOK) Code() int {
	return 200
}

func (o *HeadAPIV2ConfigNameOK) Error() string {
	return fmt.Sprintf("[HEAD /api/v2/config/{name}][%d] headApiV2ConfigNameOK", 200)
}

func (o *HeadAPIV2ConfigNameOK) String() string {
	return fmt.Sprintf("[HEAD /api/v2/config/{name}][%d] headApiV2ConfigNameOK", 200)
}

func (o *HeadAPIV2ConfigNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
