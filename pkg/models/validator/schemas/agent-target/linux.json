{
    "$id": "agent-target",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "linux",
    "description": "This type defines a Linux system object and is used for commands that need to be processed or executed by a Linux system. In addition to the inherited properties, this section defines four additional specific properties that are valid for this type.",
    "type": "object",
    "allOf": [
        {
            "$ref": "agent-target.json"
        },
        {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The value of this property MUST be 'linux'.",
                    "enum": [
                        "linux"
                    ]
                },
                "address": {
                    "type": "object",
                    "patternProperties": {
                        "^url$": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "[(http(s)?):/(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)"
                            }
                        },
                        "^l2mac$": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5}$"
                            }
                        },
                        "^ipv4$": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "(\\b25[0-5]|\\b2[0-4][0-9]|\\b[01]?[0-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$"
                            }
                        },
                        "^ipv6$": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$"
                            }
                        },
                        "^vlan$": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 4095
                            }
                        },
                        "^dname$": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "The key for each entry in the dictionary MUST be a string that uniquely identifies one or more address types. The key(s) MUST be one of the following values 'dname' (domain name), 'ipv4', 'ipv6', 'l2mac', 'vlan', or 'url'. The dictionary value associated with each key MUST be a 'list' of 'string' that contains the corresponding address(es) for that particular key type."
                },
                "port": {
                    "type": "string",
                    "description": "The TCP port number for the Linux system."
                },
                "authentication_info": {
                    "$ref": "../data-types/identifier.json",
                    "description": "This property contains an ID reference to a CACAO 'authentication-info' object that is stored at the playbook level in the 'authentication_info_definitions' property. The ID MUST reference a CACAO 'authentication-info' object (see section 6)."
                },
                "category": {
                    "type": "array",
                    "description": "One or more identified categories of security infrastructure types that this agent represents (see section 7.11.1). The value for this property SHOULD come from the 'security-category-type-ov' vocabulary.",
                    "items": {
                        "$ref": "#/$defs/security-category-type-ov"
                    },
                    "minItems": 1
                }
            }
        }
    ],
    "required": [
        "address"
    ],
    "$defs": {
        "security-category-type-ov": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "string",
                    "enum": [
                        "aaa",
                        "analytics",
                        "caldera",
                        "content-gateway",
                        "desktop",
                        "endpoint",
                        "firewall",
                        "handset",
                        "ids",
                        "ips",
                        "kali",
                        "manx",
                        "orchestrator",
                        "os-linux",
                        "os-mac",
                        "os-windows",
                        "redcanary-atomicred",
                        "ragdoll",
                        "router",
                        "sandcat",
                        "server",
                        "siem",
                        "switch",
                        "ticketing",
                        "tip",
                        "wireless"
                    ]
                }
            ]
        }
    }
}